{"Other%20Typealiases.html#/s:8Deferred17PreferredExecutora":{"name":"PreferredExecutor","abstract":"<p>The natural executor for use with Futures; a policy of the framework to"},"Extensions/NSLock.html#/s:8Deferred7LockingP12withReadLockyqd__qd__yKXEKlF":{"name":"withReadLock(_:)","parent_name":"NSLock"},"Extensions/NSLock.html#/s:8Deferred7LockingP21withAttemptedReadLockyqd__Sgqd__yKXEKlF":{"name":"withAttemptedReadLock(_:)","parent_name":"NSLock"},"Extensions/DispatchSemaphore.html#/s:8Deferred7LockingP12withReadLockyqd__qd__yKXEKlF":{"name":"withReadLock(_:)","parent_name":"DispatchSemaphore"},"Extensions/DispatchSemaphore.html#/s:8Deferred7LockingP21withAttemptedReadLockyqd__Sgqd__yKXEKlF":{"name":"withAttemptedReadLock(_:)","parent_name":"DispatchSemaphore"},"Classes/POSIXReadWriteLock.html#/s:8Deferred18POSIXReadWriteLockCACycfc":{"name":"init()","abstract":"<p>Create the standard platform lock.</p>","parent_name":"POSIXReadWriteLock"},"Classes/POSIXReadWriteLock.html#/s:8Deferred7LockingP12withReadLockyqd__qd__yKXEKlF":{"name":"withReadLock(_:)","parent_name":"POSIXReadWriteLock"},"Classes/POSIXReadWriteLock.html#/s:8Deferred7LockingP21withAttemptedReadLockyqd__Sgqd__yKXEKlF":{"name":"withAttemptedReadLock(_:)","parent_name":"POSIXReadWriteLock"},"Classes/POSIXReadWriteLock.html#/s:8Deferred7LockingP13withWriteLockyqd__qd__yKXEKlF":{"name":"withWriteLock(_:)","parent_name":"POSIXReadWriteLock"},"Classes/NativeLock.html#/s:8Deferred10NativeLockCACycfc":{"name":"init()","abstract":"<p>Creates a standard platform lock.</p>","parent_name":"NativeLock"},"Classes/NativeLock.html#/s:8Deferred7LockingP12withReadLockyqd__qd__yKXEKlF":{"name":"withReadLock(_:)","parent_name":"NativeLock"},"Classes/NativeLock.html#/s:8Deferred7LockingP21withAttemptedReadLockyqd__Sgqd__yKXEKlF":{"name":"withAttemptedReadLock(_:)","parent_name":"NativeLock"},"Classes/NativeLock.html":{"name":"NativeLock","abstract":"<p>A variant lock backed by a platform type that attempts to allow waiters to"},"Classes/POSIXReadWriteLock.html":{"name":"POSIXReadWriteLock","abstract":"<p>A readers-writer lock provided by the platform implementation of the"},"Extensions/DispatchSemaphore.html":{"name":"DispatchSemaphore","abstract":"<p>A locking construct using a counting semaphore from Grand Central Dispatch."},"Extensions/NSLock.html":{"name":"NSLock","abstract":"<p>A lock object from the Foundation Kit used to coordinate the operation of"},"Protocols/Locking.html#/s:8Deferred7LockingP12withReadLockyqd__qd__yKXEKlF":{"name":"withReadLock(_:)","abstract":"<p>Call <code>body</code> with a reading lock.</p>","parent_name":"Locking"},"Protocols/Locking.html#/s:8Deferred7LockingP21withAttemptedReadLockyqd__Sgqd__yKXEKlF":{"name":"withAttemptedReadLock(_:)","abstract":"<p>Attempt to call <code>body</code> with a reading lock.</p>","parent_name":"Locking"},"Protocols/Locking.html#/s:8Deferred7LockingP13withWriteLockyqd__qd__yKXEKlF":{"name":"withWriteLock(_:)","abstract":"<p>Call <code>body</code> with a writing lock.</p>","parent_name":"Locking"},"Classes/Protected.html#/s:8Deferred9ProtectedC12initialValue4lockACyxGx_AA7Locking_ptcfc":{"name":"init(initialValue:lock:)","abstract":"<p>Creates a protected <code>value</code> with a type implementing a <code>lock</code>.</p>","parent_name":"Protected"},"Classes/Protected.html#/s:8Deferred9ProtectedC12withReadLockyqd__qd__xKXEKlF":{"name":"withReadLock(_:)","abstract":"<p>Give read access to the item within <code>body</code>.</p>","parent_name":"Protected"},"Classes/Protected.html#/s:8Deferred9ProtectedC13withWriteLockyqd__qd__xzKXEKlF":{"name":"withWriteLock(_:)","abstract":"<p>Give write access to the item within the given function.</p>","parent_name":"Protected"},"Classes/Protected.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Protected"},"Classes/Protected.html#/s:s17CustomReflectableP12customMirrors0D0Vvp":{"name":"customMirror","parent_name":"Protected"},"Classes/Protected.html":{"name":"Protected","abstract":"<p>A protected value only allows access from within a locking statement. This"},"Protocols/Locking.html":{"name":"Locking","abstract":"<p>A type that mutually excludes execution of code such that only one unit of"},"Protocols/Either.html#/s:8Deferred6EitherP4Lefta":{"name":"Left","abstract":"<p>One of the two possible results.</p>","parent_name":"Either"},"Protocols/Either.html#/s:8Deferred6EitherP5RightQa":{"name":"Right","abstract":"<p>One of the two possible results.</p>","parent_name":"Either"},"Protocols/Either.html#/s:8Deferred6EitherP4leftxs5Error_p_tcfc":{"name":"init(left:)","abstract":"<p>Creates a left-biased instance.</p>","parent_name":"Either"},"Protocols/Either.html#/s:8Deferred6EitherP5rightx5RightQz_tcfc":{"name":"init(right:)","abstract":"<p>Creates a right-biased instance.</p>","parent_name":"Either"},"Protocols/Either.html#/s:8Deferred6EitherP8catchingx5RightQzyKXE_tcfc":{"name":"init(catching:)","abstract":"<p>Creates an instance by evaluating a throwing <code>body</code>, capturing its","parent_name":"Either"},"Protocols/Either.html#/s:8Deferred6EitherP3get5RightQzyKF":{"name":"get()","abstract":"<p>Returns the right-biased value as a throwing expression.</p>","parent_name":"Either"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolP7SuccessQa":{"name":"Success","abstract":"<p>A type that represents the success of some asynchronous work.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolP7Failurea":{"name":"Failure","abstract":"<p>A type that represents the failure of some asynchronous work.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolP11uponSuccess2on7executeyAA8Executor_p_y0E0QzctF":{"name":"uponSuccess(on:execute:)","abstract":"<p>Call some <code>body</code> closure if the task successfully completes.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolP11uponFailure2on7executeyAA8Executor_p_ys5Error_pctF":{"name":"uponFailure(on:execute:)","abstract":"<p>Call some <code>body</code> closure if the task fails.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolP11isCancelledSbvp":{"name":"isCancelled","abstract":"<p>Tests whether the underlying work has been cancelled.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolP6cancelyyF":{"name":"cancel()","abstract":"<p>Attempt to cancel the underlying work.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE7andThen4upon5startAA0B0Cy7SuccessQyd__GSo17OS_dispatch_queueC_qd__AIQzKctAaBRd__lF":{"name":"andThen(upon:start:)","abstract":"<p>Begins another task by passing the result of the task to <code>startNextTask</code>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE7andThen4upon5startAA0B0Cy7SuccessQyd__GAA8Executor_p_qd__AIQzKctAaBRd__lF":{"name":"andThen(upon:start:)","abstract":"<p>Begins another task by passing the result of the task to <code>startNextTask</code>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE8fallback4upon2toAA0B0Cy7SuccessQzGSo17OS_dispatch_queueC_qd__s5Error_pKctAaBRd__AIQyd__AJRSlF":{"name":"fallback(upon:to:)","abstract":"<p>Begins another task in the case of the failure of <code>self</code> by calling","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE8fallback4upon2toAA0B0Cy7SuccessQzGAA8Executor_p_qd__s5Error_pKctAaBRd__AIQyd__AJRSlF":{"name":"fallback(upon:to:)","abstract":"<p>Begins another task in the case of the failure of <code>self</code> by calling","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE6repeat4upon5count12continuingIf2toAA0B0Cy7SuccessQzGSo17OS_dispatch_queueC_SiSbs5Error_pcAMyKctFZ":{"name":"repeat(upon:count:continuingIf:to:)","abstract":"<p>Begin a task immediately by calling <code>startTask</code>, then if it fails retry","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE6repeat4upon5count12continuingIf2toAA0B0Cy7SuccessQzGAA8Executor_p_SiSbs5Error_pcAMyKctFZ":{"name":"repeat(upon:count:continuingIf:to:)","abstract":"<p>Begin a task immediately by calling <code>startTask</code>, then if it fails retry","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE7ignoredAA0B0CyytGyF":{"name":"ignored()","abstract":"<p>Returns a task that ignores the successful completion of this task.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE3map4upon9transformAA0B0Cyqd__GSo17OS_dispatch_queueC_qd__7SuccessQzKctlF":{"name":"map(upon:transform:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html\">Task</a></code> containing the result of mapping <code>transform</code> over the","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE3map4upon9transformAA0B0Cyqd__GAA8Executor_p_qd__7SuccessQzKctlF":{"name":"map(upon:transform:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html\">Task</a></code> containing the result of mapping <code>transform</code> over the","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPA2A07PromiseC0RzrlE7succeed4withSb7SuccessACQzyKXK_tF":{"name":"succeed(with:)","abstract":"<p>Completes the task with a successful <code>value</code>, or a thrown error.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPA2A07PromiseC0RzrlE4fail4withSbs5Error_p_tF":{"name":"fail(with:)","abstract":"<p>Completes the task with a failed <code>error</code>.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPA2A07PromiseC0Rzyt7SuccessACRtzrlE7succeedSbyF":{"name":"succeed()","abstract":"<p>Completes the task with a success.</p>","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE7recover4upon12substitutingAA0B0Cy7SuccessQzGSo17OS_dispatch_queueC_AJs5Error_pKctF":{"name":"recover(upon:substituting:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html\">Task</a></code> containing the result of mapping <code>substitution</code> over","parent_name":"TaskProtocol"},"Protocols/TaskProtocol.html#/s:8Deferred12TaskProtocolPAAE7recover4upon12substitutingAA0B0Cy7SuccessQzGAA8Executor_p_AJs5Error_pKctF":{"name":"recover(upon:substituting:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html\">Task</a></code> containing the result of mapping <code>substitution</code> over","parent_name":"TaskProtocol"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO7Failurea":{"name":"Failure","abstract":"<p>Any error.</p>","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO7successyAEyx_GxcAGmlF":{"name":"success(_:)","abstract":"<p>The success value, stored as <code>Value</code>.</p>","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO7failureyAEyx_Gs5Error_pcAGmlF":{"name":"failure(_:)","abstract":"<p>The failure value, stored as any error.</p>","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred6EitherP4leftxs5Error_p_tcfc":{"name":"init(left:)","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred6EitherP5rightx5RightQz_tcfc":{"name":"init(right:)","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred6EitherP8catchingx5RightQzyKXE_tcfc":{"name":"init(catching:)","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred6EitherP3get5RightQzyKF":{"name":"get()","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO3mapyAEyqd___Gqd__xXElF":{"name":"map(_:)","abstract":"<p>Evaluates the <code>transform</code> for a success result, passing its unwrapped","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO8mapErroryAEyx_Gs0E0_psAH_pXEF":{"name":"mapError(_:)","abstract":"<p>Evaluates the <code>transform</code> for a failure result, passing the unwrapped","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO7flatMapyAEyqd___GAGxXElF":{"name":"flatMap(_:)","abstract":"<p>Evaluates the <code>transform</code> for a success result, passing its unwrapped","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO12flatMapErroryAEyx_GAGs0F0_pXEF":{"name":"flatMapError(_:)","abstract":"<p>Evaluates the <code>transform</code> for a failure result, passing the unwrapped","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO7successAEyx_GxyKXK_tcfc":{"name":"init(success:)","abstract":"<p>Creates an instance storing a successful <code>value</code>.</p>","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO7failureAEyx_Gs5Error_p_tcfc":{"name":"init(failure:)","abstract":"<p>Creates an instance storing an <code>error</code> describing the failure.</p>","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultO5value5errorAEyx_GxSg_s5Error_pSgtcfc":{"name":"init(value:error:)","abstract":"<p>Create an exclusive success/failure state derived from two optionals,","parent_name":"Result"},"Classes/Task/Result.html#/s:8Deferred4TaskC6ResultOAAytRszlEAEyyt_Gycfc":{"name":"init()","abstract":"<p>Creates the success value.</p>","parent_name":"Result"},"Classes/Task/Result.html":{"name":"Result","abstract":"<p>A type that represents either a wrapped value or an error, representing the","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC8progressSo10NSProgressCvp":{"name":"progress","abstract":"<p>The progress of the task, which may be updated as work is completed.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC_8progressACyxGAA6FutureVyAC6ResultOyx_GG_So10NSProgressCtcfc":{"name":"init(_:progress:)","abstract":"<p>Creates a task given a <code>future</code> and its <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html#/s:8Deferred4TaskC8progressSo10NSProgressCvp\">progress</a></code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC_8progressACyxGqd___So10NSProgressCtc7SuccessQyd__RszAA0B8ProtocolRd__lufc":{"name":"init(_:progress:)","abstract":"<p>Creates a task whose <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF\">upon(_:execute:)</a></code> methods use those of <code>base</code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC_10uponCancelACyxGAA6FutureVyAC6ResultOyx_GG_yycSgtcfc":{"name":"init(_:uponCancel:)","abstract":"<p>Creates a task given a <code>future</code> and an optional <code>cancellation</code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC_10uponCancelACyxGqd___yycSgtc7SuccessQyd__RszAA0B8ProtocolRd__lufc":{"name":"init(_:uponCancel:)","abstract":"<p>Creates a task whose <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF\">upon(_:execute:)</a></code> methods use those of <code>base</code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF":{"name":"upon(_:execute:)","parent_name":"Task"},"Classes/Task.html#/s:8Deferred14FutureProtocolP4peek5ValueQzSgyF":{"name":"peek()","parent_name":"Task"},"Classes/Task.html#/s:8Deferred14FutureProtocolP4wait5until5ValueQzSg8Dispatch0G4TimeV_tF":{"name":"wait(until:)","parent_name":"Task"},"Classes/Task.html#/s:8Deferred12TaskProtocolP11isCancelledSbvp":{"name":"isCancelled","parent_name":"Task"},"Classes/Task.html#/s:8Deferred12TaskProtocolP6cancelyyF":{"name":"cancel()","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC7Promisea":{"name":"Promise","abstract":"<p>A type for communicating the result of asynchronous work.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC12succeedsFrom8progressACyxGqd___So10NSProgressCtc5ValueQyd__RszAA14FutureProtocolRd__lufc":{"name":"init(succeedsFrom:progress:)","abstract":"<p>Creates a task whose <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF\">upon(_:execute:)</a></code> methods use those of <code>base</code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC12succeedsFrom10uponCancelACyxGqd___yycSgtc5ValueQyd__RszAA14FutureProtocolRd__lufc":{"name":"init(succeedsFrom:uponCancel:)","abstract":"<p>Creates a task whose <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF\">upon(_:execute:)</a></code> methods use those of <code>base</code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC7successACyxGxyKXK_tcfc":{"name":"init(success:)","abstract":"<p>Creates an operation that has already completed with <code>value</code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC7failureACyxGs5Error_p_tcfc":{"name":"init(failure:)","abstract":"<p>Creates an operation that has already failed with <code>error</code>.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskCyACyxGADcfc":{"name":"init(_:)","abstract":"<p>Creates a task having the same underlying operation as the <code>other</code> task.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC5neverACyxGvpZ":{"name":"never","abstract":"<p>Create a task that will never complete.</p>","parent_name":"Task"},"Classes/Task.html#/s:8Deferred4TaskC5async4upon5flags8onCancel7executeACyxGSo17OS_dispatch_queueC_8Dispatch0L13WorkItemFlagsVs5Error_pyXAxyKctFZ":{"name":"async(upon:flags:onCancel:execute:)","abstract":"<p>Captures the result of asynchronously executing <code>work</code> on <code>queue</code>.</p>","parent_name":"Task"},"Classes/Task.html":{"name":"Task","abstract":"<p>A type for managing some work that may either succeed or fail at some point"},"Protocols/TaskProtocol.html":{"name":"TaskProtocol","abstract":"<p>An interface describing a thread-safe way for interacting with the result"},"Protocols/Either.html":{"name":"Either","abstract":"<p>A type that can exclusively represent one of two values.</p>"},"Extensions/CFRunLoop.html#/s:8Deferred8ExecutorP6submityyyycF":{"name":"submit(_:)","parent_name":"CFRunLoop"},"Extensions/RunLoop.html#/s:8Deferred8ExecutorP6submityyyycF":{"name":"submit(_:)","parent_name":"RunLoop"},"Extensions/OperationQueue.html#/s:8Deferred8ExecutorP6submityyyycF":{"name":"submit(_:)","parent_name":"OperationQueue"},"Extensions/DispatchQueue.html#/s:So17OS_dispatch_queueC8DeferredE3anyAByFZ":{"name":"any()","abstract":"<p>A generic catch-all dispatch queue, for when you just want to throw some","parent_name":"DispatchQueue"},"Extensions/DispatchQueue.html#/s:8Deferred8ExecutorP6submityyyycF":{"name":"submit(_:)","parent_name":"DispatchQueue"},"Extensions/DispatchQueue.html#/s:8Deferred8ExecutorP6submityy8Dispatch0D8WorkItemCF":{"name":"submit(_:)","parent_name":"DispatchQueue"},"Protocols/Executor.html#/s:8Deferred8ExecutorP6submityyyycF":{"name":"submit(_:)","abstract":"<p>Execute the <code>body</code> closure.</p>","parent_name":"Executor"},"Protocols/Executor.html#/s:8Deferred8ExecutorP6submityy8Dispatch0D8WorkItemCF":{"name":"submit(_:)","abstract":"<p>Execute the <code>workItem</code>.</p>","parent_name":"Executor"},"Protocols/Executor.html":{"name":"Executor","abstract":"<p>An executor calls closures submitted to it, typically in first-in, first-out"},"Extensions/DispatchQueue.html":{"name":"DispatchQueue","abstract":"<p>Dispatch queues invoke function bodies submitted to them serially in FIFO"},"Extensions/OperationQueue.html":{"name":"OperationQueue","abstract":"<p>An operation queue manages a number of operation objects, making high"},"Extensions/RunLoop.html":{"name":"RunLoop","abstract":"<p>A run loop processes events on a thread, and is a fundamental construct in"},"Extensions/CFRunLoop.html":{"name":"CFRunLoop","abstract":"<p>A run loop processes events on a thread, and is a fundamental construct in"},"Extensions/Sequence.html#/s:ST8DeferredAA14FutureProtocol7ElementRpzrlE11firstFilledAA0B0VyAC_5ValueQZGyF":{"name":"firstFilled()","abstract":"<p>Chooses the future that is determined first from <code>self</code>.</p>","parent_name":"Sequence"},"Extensions/Collection.html#/s:Sl8DeferredAA14FutureProtocol7ElementRpzrlE9allFilledAA0B0VySayAC_5ValueQZGGyF":{"name":"allFilled()","abstract":"<p>Composes a number of futures into a single deferred array.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl8DeferredAA12TaskProtocol7ElementRpzrlE12allSucceededAA0B0CySayAC_7SuccessQZGGyF":{"name":"allSucceeded()","abstract":"<p>Compose a number of tasks into a single array.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl8DeferredAA12TaskProtocol7ElementRpzytAC_7SuccessRTzrlE12allSucceededAA0B0CyytGyF":{"name":"allSucceeded()","abstract":"<p>Compose a number of tasks into a single array.</p>","parent_name":"Collection"},"Structs/Future.html#/s:8Deferred6FutureVyACyxGqd__c5ValueQyd__RszAA0B8ProtocolRd__lufc":{"name":"init(_:)","abstract":"<p>Create a future whose <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Future.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF\">upon(_:execute:)</a></code> methods forward to <code>base</code>.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureV5valueACyxGx_tcfc":{"name":"init(value:)","abstract":"<p>Wrap and forward future as if it were always filled with <code>value</code>.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureV5neverACyxGvpZ":{"name":"never","abstract":"<p>Create a future that will never get fulfilled.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureVyACyxGADcfc":{"name":"init(_:)","abstract":"<p>Create a future having the same underlying future as <code>other</code>.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF":{"name":"upon(_:execute:)","parent_name":"Future"},"Structs/Future.html#/s:8Deferred14FutureProtocolP4peek5ValueQzSgyF":{"name":"peek()","parent_name":"Future"},"Structs/Future.html#/s:8Deferred14FutureProtocolP4wait5until5ValueQzSg8Dispatch0G4TimeV_tF":{"name":"wait(until:)","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureV5async4upon5flags7executeACyxGSo17OS_dispatch_queueC_8Dispatch0J13WorkItemFlagsVxyctFZ":{"name":"async(upon:flags:execute:)","abstract":"<p>Captures the value of asynchronously executing <code>work</code> on <code>queue</code>.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred12TaskProtocolP7SuccessQa":{"name":"Success","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureVA2A6EitherRzlE10resultFromACyxGqd___tcAA12TaskProtocolRd__7SuccessQyd__5RightRtzlufc":{"name":"init(resultFrom:)","abstract":"<p>Create a future having the same underlying task as <code>other</code>.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureVA2A6EitherRzlE12succeedsFromACyxGqd___tcAA0B8ProtocolRd__5ValueQyd__5RightRtzlufc":{"name":"init(succeedsFrom:)","abstract":"<p>Create a future having the same underlying task as <code>other</code>.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureVA2A6EitherRzlE7successACyxG5RightQzyKXK_tcfc":{"name":"init(success:)","abstract":"<p>Creates an future having already filled successfully with <code>value</code>.</p>","parent_name":"Future"},"Structs/Future.html#/s:8Deferred6FutureVA2A6EitherRzlE7failureACyxGs5Error_p_tcfc":{"name":"init(failure:)","abstract":"<p>Creates an future having already failed with <code>error</code>.</p>","parent_name":"Future"},"Structs/Future.html":{"name":"Future","abstract":"<p>A type-erased wrapper over any future.</p>"},"Extensions/Collection.html":{"name":"Collection"},"Extensions/Sequence.html":{"name":"Sequence"},"Protocols/PromiseProtocol.html#/s:8Deferred15PromiseProtocolP5ValueQa":{"name":"Value","abstract":"<p>A type that represents the result of some asynchronous operation.</p>","parent_name":"PromiseProtocol"},"Protocols/PromiseProtocol.html#/s:8Deferred15PromiseProtocolPxycfc":{"name":"init()","abstract":"<p>Creates an instance in a default, unfilled state.</p>","parent_name":"PromiseProtocol"},"Protocols/PromiseProtocol.html#/s:8Deferred15PromiseProtocolP8isFilledSbvp":{"name":"isFilled","abstract":"<p>Check whether or not the receiver is filled.</p>","parent_name":"PromiseProtocol"},"Protocols/PromiseProtocol.html#/s:8Deferred15PromiseProtocolP4fill4withSb5ValueQz_tF":{"name":"fill(with:)","abstract":"<p>Determines the promise with <code>value</code>.</p>","parent_name":"PromiseProtocol"},"Protocols/PromiseProtocol.html#/s:8Deferred15PromiseProtocolPAAE8mustFill4with4file4liney5ValueQz_s12StaticStringVSutF":{"name":"mustFill(with:file:line:)","abstract":"<p>Determines the deferred <code>value</code>.</p>","parent_name":"PromiseProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolP5ValueQa":{"name":"Value","abstract":"<p>A type that represents the result of some asynchronous operation.</p>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF":{"name":"upon(_:execute:)","abstract":"<p>Call some <code>body</code> closure once the value is determined.</p>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolP4peek5ValueQzSgyF":{"name":"peek()","abstract":"<p>Checks for and returns a determined value.</p>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolP4wait5until5ValueQzSg8Dispatch0G4TimeV_tF":{"name":"wait(until:)","abstract":"<p>Waits synchronously for the value to become determined.</p>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A textual representation of this instance, suitable for debugging.</p>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE12customMirrors0E0Vvp":{"name":"customMirror","abstract":"<p>Return the <code>Mirror</code> for <code>self</code>.</p>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE7andThen4upon5startAA0B0Vy5ValueQyd__GSo17OS_dispatch_queueC_qd__AIQzctAaBRd__lF":{"name":"andThen(upon:start:)","abstract":"<p>Begins another asynchronous operation by passing the deferred value to","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE7andThen4upon5startAA0B0Vy5ValueQyd__GAA8Executor_p_qd__AIQzctAaBRd__lF":{"name":"andThen(upon:start:)","abstract":"<p>Begins another asynchronous operation by passing the deferred value to","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3andyAA0B0Vy5ValueQz_AGQyd__tGqd__AaBRd__lF":{"name":"and(_:)","abstract":"<p>Returns a value that becomes determined after both the callee and the","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3andyAA0B0Vy5ValueQz_AGQyd__AGQyd_0_tGqd___qd_0_tAaBRd__AaBRd_0_r0_lF":{"name":"and(_:_:)","abstract":"<p>Returns a value that becomes determined after the callee and both other","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3andyAA0B0Vy5ValueQz_AGQyd__AGQyd_0_AGQyd_1_tGqd___qd_0_qd_1_tAaBRd__AaBRd_0_AaBRd_1_r1_lF":{"name":"and(_:_:_:)","abstract":"<p>Returns a value that becomes determined after the callee and all other","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3andyAA0B0Vy5ValueQz_AGQyd__AGQyd_0_AGQyd_1_AGQyd_2_tGqd___qd_0_qd_1_qd_2_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lF":{"name":"and(_:_:_:_:)","abstract":"<p>Returns a value that becomes determined after the callee and all other","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3andyAA0B0Vy5ValueQz_AGQyd__AGQyd_0_AGQyd_1_AGQyd_2_AGQyd_3_tGqd___qd_0_qd_1_qd_2_qd_3_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lF":{"name":"and(_:_:_:_:_:)","abstract":"<p>Returns a value that becomes determined after the callee and all other","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3andyAA0B0Vy5ValueQz_AGQyd__AGQyd_0_AGQyd_1_AGQyd_2_AGQyd_3_AGQyd_4_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lF":{"name":"and(_:_:_:_:_:_:)","abstract":"<p>Returns a value that becomes determined after the callee and all other","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3andyAA0B0Vy5ValueQz_AGQyd__AGQyd_0_AGQyd_1_AGQyd_2_AGQyd_3_AGQyd_4_AGQyd_5_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lF":{"name":"and(_:_:_:_:_:_:_:)","abstract":"<p>Returns a value that becomes determined after the callee and all other","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE5every3perAA0B0Vyqd__Gqd__5ValueQzc_tlF":{"name":"every(per:)","abstract":"<p>Returns a future that transparently performs the <code>eachUseTransform</code>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE7ignoredAA0B0VyytGyF":{"name":"ignored()","abstract":"<p>Returns a future that ignores the result of this future.</p>","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3map4upon9transformAA0B0Vyqd__GSo17OS_dispatch_queueC_qd__5ValueQzctlF":{"name":"map(upon:transform:)","abstract":"<p>Returns a future containing the result of mapping <code>transform</code> over the","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE3map4upon9transformAA0B0Vyqd__GAA8Executor_p_qd__5ValueQzctlF":{"name":"map(upon:transform:)","abstract":"<p>Returns a future containing the result of mapping <code>transform</code> over the","parent_name":"FutureProtocol"},"Protocols/FutureProtocol.html#/s:8Deferred14FutureProtocolPAAE19defaultUponExecutorSo17OS_dispatch_queueCvpZ":{"name":"defaultUponExecutor","abstract":"<p>The executor to use as a default argument to <code>upon</code> methods on <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Future.html\">Future</a></code>.</p>","parent_name":"FutureProtocol"},"Structs/Deferred.html#/s:8Deferred15PromiseProtocolPxycfc":{"name":"init()","parent_name":"Deferred"},"Structs/Deferred.html#/s:8DeferredAAV10filledWithAByxGx_tcfc":{"name":"init(filledWith:)","abstract":"<p>Creates an instance resolved with <code>value</code>.</p>","parent_name":"Deferred"},"Structs/Deferred.html#/s:8Deferred14FutureProtocolP4upon_7executeyAA8Executor_p_y5ValueQzctF":{"name":"upon(_:execute:)","parent_name":"Deferred"},"Structs/Deferred.html#/s:8Deferred14FutureProtocolP4peek5ValueQzSgyF":{"name":"peek()","parent_name":"Deferred"},"Structs/Deferred.html#/s:8Deferred14FutureProtocolP4wait5until5ValueQzSg8Dispatch0G4TimeV_tF":{"name":"wait(until:)","parent_name":"Deferred"},"Structs/Deferred.html#/s:8Deferred15PromiseProtocolP4fill4withSb5ValueQz_tF":{"name":"fill(with:)","parent_name":"Deferred"},"Structs/Deferred.html#/s:8Deferred12TaskProtocolP7SuccessQa":{"name":"Success","parent_name":"Deferred"},"Structs/Deferred.html":{"name":"Deferred","abstract":"<p>A value that may become determined (or <q>filled</q>) at some point in the"},"Protocols/FutureProtocol.html":{"name":"FutureProtocol","abstract":"<p>A future models reading a value which may become available at some point.</p>"},"Protocols/PromiseProtocol.html":{"name":"PromiseProtocol","abstract":"<p>A promise models writing the result of some asynchronous operation.</p>"},"why-deferred.html":{"name":"Why Deferred?"},"basic-tasks.html":{"name":"Basic Tasks"},"mastering-the-future-type.html":{"name":"Mastering The Future Type"},"getting-started.html":{"name":"Getting Started"},"Intuition.html":{"name":"Intuition"},"Futures%20and%20Promises.html":{"name":"Futures and Promises"},"Transforming%20Futures.html":{"name":"Transforming Futures"},"Controlling%20Where%20Callbacks%20Execute.html":{"name":"Controlling Where Callbacks Execute"},"Futures%20Than%20Can%20Fail.html":{"name":"Futures Than Can Fail"},"Coordinating%20Access%20to%20Data.html":{"name":"Coordinating Access to Data"},"Coordination%20Primitives.html":{"name":"Coordination Primitives"},"Other%20Typealiases.html":{"name":"Other Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}